{"version":3,"sources":["components/Header.js","components/TabsDisplay.js","components/AddItem.js","components/Item.js","components/Items.js","components/App.js","index.js"],"names":["Header","className","TabsDisplay","activeTab","setActiveTab","tabHandler","e","currentTarget","innerHTML","isActive","name","onClick","AddItem","todos","setTodos","useState","inputValue","setInputValue","type","placeholder","onChange","target","value","maxId","length","reduce","max","item","id","newArray","push","text","state","clickHandler","Item","checkedState","handleOnChange","itemId","isChecked","isIcon","checked","Items","itemsToShow","idToChange","elementsIndex","findIndex","element","filter","map","idToRemove","elementIndex","splice","removeSingleHandler","newItems","removeAllItems","App","savedTodos","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7957a609.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>#todo</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst TabsDisplay = ({ activeTab, setActiveTab }) => {\r\n  const tabHandler = (e) => {\r\n    setActiveTab(e.currentTarget.innerHTML);\r\n  };\r\n\r\n  // Function used to toggle the 'active' ClassName on the clicked Tab //\r\n  const isActive = (name) => activeTab === name && \"active\";\r\n\r\n  return (\r\n    <div className=\"tabsDisplay\">\r\n      <ul className=\"tabsDisplay__list\">\r\n        <li\r\n          className={`tabsDisplay__list__item ${isActive(\"All\")}`}\r\n          onClick={tabHandler}\r\n        >\r\n          All\r\n        </li>\r\n        <li\r\n          className={`tabsDisplay__list__item ${isActive(\"Active\")}`}\r\n          onClick={tabHandler}\r\n        >\r\n          Active\r\n        </li>\r\n        <li\r\n          className={`tabsDisplay__list__item ${isActive(\"Completed\")}`}\r\n          onClick={tabHandler}\r\n        >\r\n          Completed\r\n        </li>\r\n      </ul>\r\n      <hr className=\"tabsDisplay__separator\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsDisplay;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddItem = ({ todos, setTodos }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const onChangeHandle = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    if (inputValue) {\r\n      let maxId =\r\n        todos.length > 0\r\n          ? todos.reduce(\r\n              (max, item) => (item.id > max ? item.id : max),\r\n              todos[0].id\r\n            )\r\n          : 0;\r\n      let newArray = [...todos];\r\n      newArray.push({ id: maxId + 1, text: inputValue, state: false });\r\n      setTodos(newArray);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addItem\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"addItem__input\"\r\n        placeholder=\"add details\"\r\n        onChange={onChangeHandle}\r\n        value={inputValue}\r\n      />\r\n      <button className=\"addItem__btn\" onClick={() => clickHandler()}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItem;\r\n","import React from \"react\";\r\nimport { BsCheckLg } from \"react-icons/bs\";\r\n\r\nconst Item = ({ name, checkedState, handleOnChange, itemId }) => {\r\n  const isChecked = checkedState && \"checked\"; // toggle the checked class //\r\n  const isIcon = checkedState && <BsCheckLg />; // Add Icon for the checked Items //\r\n\r\n  return (\r\n    <label className=\"item\">\r\n      {isIcon}\r\n      <input\r\n        type=\"checkbox\"\r\n        id={`custom-checkbox-${itemId}`}\r\n        className={`item__input ${isChecked}`}\r\n        name={name}\r\n        value={name}\r\n        checked={checkedState}\r\n        onChange={() => handleOnChange(itemId)}\r\n      />\r\n      <span>{name}</span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Items = ({ todos, setTodos, activeTab }) => {\r\n  const handleOnChange = (idToChange) => {\r\n    // Get the Index of the item to change in the array //\r\n    let elementsIndex = todos.findIndex((element) => element.id === idToChange);\r\n\r\n    // Create a copy of the original Array (to prevent changing the state without useState) //\r\n    let newArray = [...todos];\r\n\r\n    // Make the modification to the new array : toggle 'state' Value //\r\n    newArray[elementsIndex] = {\r\n      ...newArray[elementsIndex],\r\n      state: !newArray[elementsIndex].state,\r\n    };\r\n\r\n    // replace the original array with the new array //\r\n    setTodos(newArray);\r\n  };\r\n\r\n  const removeSingleHandler = (idToRemove) => {\r\n    // Find the Index of the element to remove from the Araay //\r\n    let elementIndex = todos.findIndex((element) => element.id === idToRemove);\r\n\r\n    // Create a copy of the original Array (to prevent changing the state without useState) //\r\n    let newArray = [...todos];\r\n\r\n    // Make the modification to the new array : toggle 'state' Value //\r\n    newArray.splice(elementIndex, 1);\r\n\r\n    // replace the original array with the new array //\r\n    setTodos(newArray);\r\n  };\r\n\r\n  // Create a variable to store all the ID to remove //\r\n  const removeAllItems = () => {\r\n    let newItems = todos.filter((item) => item.state === false);\r\n    let newArray = [...newItems];\r\n    setTodos(newArray);\r\n  };\r\n  // Create a variable to store the items to show depending on the active Tab //\r\n  let itemsToShow;\r\n\r\n  if (activeTab === \"Active\") {\r\n    itemsToShow = (\r\n      <ul className=\"items__list\">\r\n        {todos\r\n          .filter((item) => item.state === false)\r\n          .map((item) => (\r\n            <li className=\"items__list__item\" key={item.id}>\r\n              <Item\r\n                name={item.text}\r\n                checkedState={item.state}\r\n                handleOnChange={handleOnChange}\r\n                itemId={item.id}\r\n              />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    );\r\n  } else if (activeTab === \"Completed\") {\r\n    itemsToShow = (\r\n      <>\r\n        <ul className=\"items__list\">\r\n          {todos\r\n            .filter((item) => item.state === true)\r\n            .map((item) => (\r\n              <li className=\"items__list__item\" key={item.id}>\r\n                <Item\r\n                  name={item.text}\r\n                  checkedState={item.state}\r\n                  handleOnChange={handleOnChange}\r\n                  itemId={item.id}\r\n                />\r\n                <span onClick={() => removeSingleHandler(item.id)}>\r\n                  <FaTrashAlt />\r\n                </span>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n        <div className=\"btn__wrapper\">\r\n          <button onClick={() => removeAllItems()}>\r\n            <FaTrashAlt />\r\n            delete all\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    itemsToShow = (\r\n      <ul className=\"items__list\">\r\n        {todos.map((item) => (\r\n          <li className=\"items__list__item\" key={item.id}>\r\n            <Item\r\n              name={item.text}\r\n              checkedState={item.state}\r\n              handleOnChange={handleOnChange}\r\n              itemId={item.id}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return <div className=\"items\">{itemsToShow}</div>;\r\n};\r\n\r\nexport default Items;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport TabsDisplay from \"./TabsDisplay\";\nimport AddItem from \"./AddItem\";\nimport Items from \"./Items\";\n\nfunction App() {\n  const savedTodos = localStorage.getItem(\"todos\");\n  const [todos, setTodos] = useState(\n    savedTodos\n      ? JSON.parse(savedTodos)\n      : [\n          { id: 1, text: \"Do coding challenges\", state: false },\n          { id: 2, text: \"Do coding challenges\", state: false },\n          {\n            id: 3,\n            text: \"Do coding challenges\",\n            state: true,\n          },\n        ]\n  );\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const [activeTab, setActiveTab] = useState(\"All\");\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <TabsDisplay activeTab={activeTab} setActiveTab={setActiveTab} />\n      <AddItem todos={todos} setTodos={setTodos} />\n      <Items todos={todos} setTodos={setTodos} activeTab={activeTab} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}